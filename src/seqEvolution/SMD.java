package seqEvolution;

//Substitution Model Definitions
public class SMD {

	public static SubstitutionMatrix create(String model) {
		model = model.trim().toUpperCase();
		if (model.equals("JC69")) {
			return createJC69();
		} else if (model.equals("UNIFORMAA")) {
			return createUniformAA();
		} else if (model.equals("JTT")) {
			return createJTT();
		} else if (model.equals("LG")) {
			return createLG();
		} else if (model.equals("WAG")) {
			return createWAG();
		}
		return null;
	}

	// Returns the DNA model type described by Jukes & Cantor 1969.
	public static SubstitutionMatrix createJC69() {
		double[] Pi = new double[4];
		double[] R = new double[6];
		for (int i = 0; i < 4; i++) {
			Pi[i] = 0.25;
		}
		// for (int i = 0; i < 4 * (4 - 1) / 2; i++)
		for (int i = 0; i < 6; i++) {
			R[i] = 1.0;
		}

		return new SubstitutionMatrix("JC69", SequenceType.DNA, R, Pi);
	}

	// Returns the model type described by Jones, Taylor and Thornton.
	public static SubstitutionMatrix createJTT() {
		double[] Pi = { 0.077000, 0.051000, 0.043000, 0.052000, 0.020000, 0.041000, 0.062000, 0.074000, 0.023000,
				0.052000, 0.091000, 0.059000, 0.024000, 0.040000, 0.051000, 0.069000, 0.059000, 0.014000, 0.032000,
				0.066000 };
		double[] R = { 247.00, 216.00, 386.00, 106.00, 208.00, 600.00, 1183.0, 46.000, 173.00, 257.00, 200.00, 100.00,
				51.000, 901.00, 2413.0, 2440.0, 11.000, 41.000, 1766.0, 116.00, 48.000, 125.00, 750.00, 119.00, 614.00,
				446.00, 76.000, 205.00, 2348.0, 61.000, 16.000, 217.00, 413.00, 230.00, 109.00, 46.000, 69.000, 1433.0,
				32.000, 159.00, 180.00, 291.00, 466.00, 130.00, 63.000, 758.00, 39.000, 15.000, 31.000, 1738.0, 693.00,
				2.0000, 114.00, 55.000, 13.000, 130.00, 2914.0, 577.00, 144.00, 37.000, 34.000, 102.00, 27.000, 8.0000,
				39.000, 244.00, 151.00, 5.0000, 89.000, 127.00, 9.0000, 8.0000, 98.000, 40.000, 19.000, 36.000, 7.0000,
				23.000, 66.000, 15.000, 353.00, 66.000, 38.000, 164.00, 99.000, 1027.0, 84.000, 635.00, 20.000, 314.00,
				858.00, 52.000, 9.0000, 395.00, 182.00, 149.00, 12.000, 40.000, 58.000, 610.00, 41.000, 43.000, 65.000,
				754.00, 30.000, 13.000, 71.000, 156.00, 142.00, 12.000, 15.000, 226.00, 41.000, 25.000, 56.000, 142.00,
				27.000, 18.000, 93.000, 1131.0, 164.00, 69.000, 15.000, 276.00, 26.000, 134.00, 85.000, 21.000, 50.000,
				157.00, 138.00, 6.000, 5.0000, 514.00, 22.000, 1324.0, 75.000, 704.00, 196.00, 31.000, 172.00, 930.00,
				12.000, 61.000, 3938.0, 94.000, 974.00, 1093.0, 578.00, 436.00, 172.00, 82.000, 84.000, 1261.0, 103.00,
				7.0000, 77.000, 228.00, 398.00, 9.0000, 20.000, 58.000, 49.000, 23.000, 54.000, 343.00, 8.0000, 17.000,
				559.00, 36.000, 309.00, 39.000, 37.000, 850.00, 189.00, 1138.0, 412.00, 6.0000, 22.000, 84.000, 2258.0,
				36.000, 164.00, 219.00, 8.0000, 45.000, 526.00, 41.000, 27.000, 42.000 };

		return new SubstitutionMatrix("JTT", SequenceType.AMINO_ACID, R, Pi);
	}

	// Returns the model type described in "LG: An Improved, General Amino-Acid
	// Replacement Matrix, Le S.Q., Gascuel O., MBE. 2008 25(7):1307-20."
	public static SubstitutionMatrix createLG() {
		double[] Pi = { 0.079066, 0.055941, 0.041977, 0.053052, 0.012937, 0.040767, 0.071586, 0.057337, 0.022355,
				0.062157, 0.099081, 0.064600, 0.022951, 0.042302, 0.044040, 0.061197, 0.053287, 0.012066, 0.034155,
				0.069147 };
		// TODO: Joel: Do these need normalization w.r.t. 1 expected event over branch
		// length 1?
		double[] R = { 0.425093, 0.276818, 0.395144, 2.489084, 0.969894, 1.038545, 2.06604, 0.358858, 0.14983, 0.395337,
				0.536518, 1.124035, 0.253701, 1.177651, 4.727182, 2.139501, 0.180717, 0.218959, 2.54787, 0.751878,
				0.123954, 0.534551, 2.807908, 0.36397, 0.390192, 2.426601, 0.126991, 0.301848, 6.326067, 0.484133,
				0.052722, 0.332533, 0.858151, 0.578987, 0.593607, 0.31444, 0.170887, 5.076149, 0.528768, 1.695752,
				0.541712, 1.437645, 4.509238, 0.191503, 0.068427, 2.145078, 0.371004, 0.089525, 0.161787, 4.008358,
				2.000679, 0.045376, 0.612025, 0.083688, 0.062556, 0.523386, 5.24387, 0.844926, 0.927114, 0.01069,
				0.015076, 0.282959, 0.025548, 0.017416, 0.394456, 1.240275, 0.42586, 0.02989, 0.135107, 0.037967,
				0.084808, 0.003499, 0.569265, 0.640543, 0.320627, 0.594007, 0.013266, 0.89368, 1.105251, 0.075382,
				2.784478, 1.14348, 0.670128, 1.165532, 1.959291, 4.128591, 0.267959, 4.813505, 0.072854, 0.582457,
				3.234294, 1.672569, 0.035855, 0.624294, 1.223828, 1.080136, 0.236199, 0.257336, 0.210332, 0.348847,
				0.423881, 0.044265, 0.069673, 1.807177, 0.173735, 0.018811, 0.419409, 0.611973, 0.604545, 0.077852,
				0.120037, 0.245034, 0.311484, 0.008705, 0.044261, 0.296636, 0.139538, 0.089586, 0.196961, 1.73999,
				0.129836, 0.268491, 0.054679, 0.076701, 0.108882, 0.366317, 0.697264, 0.442472, 0.682139, 0.508851,
				0.990012, 0.584262, 0.597054, 5.306834, 0.119013, 4.145067, 0.159069, 4.273607, 1.112727, 0.078281,
				0.064105, 1.033739, 0.11166, 0.232523, 10.649107, 0.1375, 6.312358, 2.592692, 0.24906, 0.182287,
				0.302936, 0.619632, 0.299648, 1.702745, 0.656604, 0.023918, 0.390322, 0.748683, 1.136863, 0.049906,
				0.131932, 0.185202, 1.798853, 0.099849, 0.34696, 2.020366, 0.696175, 0.481306, 1.898718, 0.094464,
				0.361819, 0.165001, 2.457121, 7.803902, 0.654683, 1.338132, 0.571468, 0.095131, 0.089613, 0.296501,
				6.472279, 0.248862, 0.400547, 0.098369, 0.140825, 0.245841, 2.188158, 3.151815, 0.18951, 0.249313 };

		return new SubstitutionMatrix("LG", SequenceType.AMINO_ACID, R, Pi);
	}

	// Returns the amino acid model type corresponding to that described by Jukes &
	// Cantor 1969 for DNA.
	public static SubstitutionMatrix createUniformAA() {
		double[] Pi = new double[20];
		double[] R = new double[190];
		for (int i = 0; i < 20; i++) {
			Pi[i] = 0.05;
		}
		for (int i = 0; i < 190; i++) {
			R[i] = 1.0;
		}
		return new SubstitutionMatrix("UniformAA", SequenceType.AMINO_ACID, R, Pi);
	}

	// Returns the model type described in "Whelan, S. and N. Goldman, 2001, A
	// general empirical model of
	// protein evolution derived from multiple protein families using a maximum
	// likelihood approach, MBE 18:691-699.
	public static SubstitutionMatrix createWAG() {
		double[] Pi = { 0.0866279, 0.043972, 0.0390894, 0.0570451, 0.0193078, 0.0367281, 0.0580589, 0.0832518,
				0.0244313, 0.048466, 0.086209, 0.0620286, 0.0195027, 0.0384319, 0.0457631, 0.0695179, 0.0610127,
				0.0143859, 0.0352742, 0.0708956 };
		// TODO: Joel: Do these need normalization w.r.t. 1 expected event over branch
		// length 1?
		double[] R = { 0.551571, 0.509848, 0.738998, 1.02704, 0.908598, 1.58285, 1.41672, 0.316954, 0.193335, 0.397915,
				0.906265, 0.893496, 0.210494, 1.43855, 3.37079, 2.12111, 0.113133, 0.240735, 2.00601, 0.635346,
				0.147304, 0.528191, 3.0355, 0.439157, 0.584665, 2.13715, 0.186979, 0.497671, 5.35142, 0.683162,
				0.102711, 0.679489, 1.22419, 0.554413, 1.16392, 0.381533, 0.251849, 5.42942, 0.265256, 1.54364,
				0.947198, 1.12556, 3.95629, 0.554236, 0.131528, 3.01201, 0.198221, 0.0961621, 0.195081, 3.97423,
				2.03006, 0.0719167, 1.086, 0.196246, 0.0302949, 0.616783, 6.17416, 0.865584, 0.930676, 0.039437,
				0.0848047, 0.479855, 0.103754, 0.0467304, 0.423984, 1.07176, 0.374866, 0.129767, 0.325711, 0.152335,
				0.0988179, 0.021352, 0.306674, 0.248972, 0.170135, 0.384287, 0.0740339, 0.390482, 0.39802, 0.109404,
				1.40766, 0.512984, 0.71707, 0.543833, 1.00214, 5.46947, 0.330052, 4.29411, 0.113917, 0.869489, 3.8949,
				1.54526, 0.0999208, 0.933372, 1.02887, 0.857928, 0.215737, 0.22771, 0.301281, 0.567717, 0.570025,
				0.127395, 0.154263, 2.58443, 0.315124, 0.0811339, 0.682355, 0.704939, 0.822765, 0.156557, 0.196303,
				0.588731, 0.24941, 0.0304501, 0.0613037, 0.373558, 0.1741, 0.049931, 0.24357, 1.34182, 0.225833,
				0.336983, 0.103604, 0.187247, 0.13819, 0.499462, 0.890432, 0.404141, 0.679371, 0.696198, 0.740169,
				0.473307, 0.262569, 3.87344, 0.118358, 3.17097, 0.323832, 4.25746, 1.05947, 0.0999288, 0.31944, 1.45816,
				0.212483, 0.42017, 7.8213, 0.257555, 4.85402, 2.11517, 0.415844, 0.344739, 0.326622, 0.665309, 0.398618,
				1.80034, 0.934276, 0.088836, 0.556896, 0.96713, 1.38698, 0.137505, 0.133264, 0.305434, 1.19063,
				0.171329, 0.493905, 1.51612, 0.515706, 0.428437, 2.05845, 0.161444, 0.545931, 0.171903, 1.52964,
				6.45428, 0.649892, 1.61328, 0.795384, 0.139405, 0.216046, 0.314887, 4.37802, 0.523742, 0.786993,
				0.232739, 0.110864, 0.291148, 1.38823, 2.48539, 0.365369, 0.31473 };

		return new SubstitutionMatrix("WAG", SequenceType.AMINO_ACID, R, Pi);
	}

}
